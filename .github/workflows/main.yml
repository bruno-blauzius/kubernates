# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      DOCKER_HUB_TAG:
        description: "Tag do projeto"
        type: string
        default: bruno01/fiap01:latest
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      DOCKER_HUB_TAG:
        description: "Tag do projeto"
        type: string
        default: bruno01/fiap01:latest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: envs_app

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - 
        name: Run a one-line script
        run: echo Hello, world! bruno01/fiap01:latest

      - 
        name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0' # default is latest stable
        id: install
              
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ vars.AWS_REGION }}
          
      - 
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - 
        name: PULL docker image
        env:
          IMAGE: ${{ inputs.DOCKER_HUB_TAG }}
        run: |
          docker pull $IMAGE
      - 
        name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: producao
          IMAGE: ${{ inputs.DOCKER_HUB_TAG }}
        run: |
          docker tag $IMAGE $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest
      
      - 
        name: Update kube config
        env:
          CLUSTER: fiap-cluster
          REGION:  ${{ vars.AWS_REGION }}
        run: aws eks --region $REGION update-kubeconfig --name $CLUSTER
        
      - 
        name: Deploy to EKS
        run: |
          kubectl apply -f web_cafeteria
